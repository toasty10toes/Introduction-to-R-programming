ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
col = 'grey20',
shape = 16,
size = 1.2,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey20',
col = 'grey10',
shape = 21,
size = 1.2,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey20',
col = 'grey10',
shape = 21,
size = 1.2,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5,
pad_x = unit(-0.01, "cm")
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey20',
col = 'grey10',
shape = 21,
size = 1.2,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5,
pad_x = unit(-0.001, "cm")
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey30',
col = 'grey10',
shape = 21,
size = 1.2,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5,
pad_x = unit(-0.001, "cm")
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey30',
col = 'grey10',
shape = 21,
size = 1.1,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5,
pad_x = unit(-0.001, "cm")
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
# Create the base plot.
p <- ggplot() +
# Plot ecoregions with fill mapped to NA_L2NAME
geom_sf(data = ecoregions,
aes(fill = NA_L2NAME),
col = NA) +
# Define custom colors for Level 2 Ecoregion
scale_fill_manual(values = name_to_color,
name = 'Level 2 Ecoregion') +
# Add zoom layer with grey outline
geom_sf(data = zoom,
fill = NA,
col = '#877f7d') +
# Add static_global layer with a shape aesthetic for the legend
geom_sf(data = static_global,
aes(shape = paste0("Sample Reach")),  # Add a dummy label for the shape legend
fill = 'grey30',
col = 'grey10',
shape = 21,
size = 1.2,
alpha = 0.7) +
# Define shapes for the legend
scale_shape_manual(values = 21) +
# Coordinate settings
coord_sf(expand = FALSE) +
# Use a white-black theme
theme_bw() +
# Adjust margins
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) +
# Control guides for fill and shape
guides(
fill = guide_legend(override.aes = list(colour = NA, stroke = NA), ncol = 1),
shape = guide_legend(order = 2, title = NULL)  # Ensure shape is shown as a separate legend
) +
# Adjust legend text and key size
theme(
legend.text = element_text(face = "italic"),
legend.key.size = unit(10, "pt"),
panel.grid.minor = element_blank()
) +
ggspatial::annotation_north_arrow(
location = "bl", which_north = "true",
pad_x = unit(0.4, "in"), pad_y = unit(0.4, "in"),
height = unit(1, "cm"),
width = unit(1, "cm"),
style = ggspatial::north_arrow_fancy_orienteering(
fill = c("grey30", "white"),
line_col = "grey30",
text_col = "black"
)
) +
ggspatial::annotation_scale(
location = "bl",
# pad_x = unit(1, "cm"),
# pad_y = unit(0.5, "cm"),
bar_cols = 'white',
text_cex = 0.7
)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey30',
col = 'grey10',
shape = 21,
size = 1.1,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5,
pad_x = unit(-0.001, "cm")
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
# Create the base plot.
p <- ggplot() +
# Plot ecoregions with fill mapped to NA_L2NAME
geom_sf(data = ecoregions,
aes(fill = NA_L2NAME),
col = NA) +
# Define custom colors for Level 2 Ecoregion
scale_fill_manual(values = name_to_color,
name = 'Level 2 Ecoregion') +
# Add zoom layer with grey outline
geom_sf(data = zoom,
fill = NA,
col = '#877f7d') +
# Add static_global layer with a shape aesthetic for the legend
geom_sf(data = static_global,
aes(shape = paste0("Sample Reach")),  # Add a dummy label for the shape legend
fill = 'grey30',
col = 'grey10',
shape = 21,
size = 1,
alpha = 0.7) +
# Define shapes for the legend
scale_shape_manual(values = 21) +
# Coordinate settings
coord_sf(expand = FALSE) +
# Use a white-black theme
theme_bw() +
# Adjust margins
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) +
# Control guides for fill and shape
guides(
fill = guide_legend(override.aes = list(colour = NA, stroke = NA), ncol = 1),
shape = guide_legend(order = 2, title = NULL)  # Ensure shape is shown as a separate legend
) +
# Adjust legend text and key size
theme(
legend.text = element_text(face = "italic"),
legend.key.size = unit(10, "pt"),
panel.grid.minor = element_blank()
) +
ggspatial::annotation_north_arrow(
location = "bl", which_north = "true",
pad_x = unit(0.4, "in"), pad_y = unit(0.4, "in"),
height = unit(1, "cm"),
width = unit(1, "cm"),
style = ggspatial::north_arrow_fancy_orienteering(
fill = c("grey30", "white"),
line_col = "grey30",
text_col = "black"
)
) +
ggspatial::annotation_scale(
location = "bl",
# pad_x = unit(1, "cm"),
# pad_y = unit(0.5, "cm"),
bar_cols = 'white',
text_cex = 0.7
)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey30',
col = 'grey10',
shape = 21,
size = 1.1,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5,
pad_x = unit(-0.001, "cm")
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
# Create the base plot.
p <- ggplot() +
# Plot ecoregions with fill mapped to NA_L2NAME
geom_sf(data = ecoregions,
aes(fill = NA_L2NAME),
col = NA) +
# Define custom colors for Level 2 Ecoregion
scale_fill_manual(values = name_to_color,
name = 'Level 2 Ecoregion') +
# Add zoom layer with grey outline
geom_sf(data = zoom,
fill = NA,
col = '#877f7d') +
# Add static_global layer with a shape aesthetic for the legend
geom_sf(data = static_global,
aes(shape = paste0("Sample Reach")),  # Add a dummy label for the shape legend
fill = 'grey',
col = 'grey10',
shape = 21,
size = 1,
alpha = 0.7) +
# Define shapes for the legend
scale_shape_manual(values = 21) +
# Coordinate settings
coord_sf(expand = FALSE) +
# Use a white-black theme
theme_bw() +
# Adjust margins
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) +
# Control guides for fill and shape
guides(
fill = guide_legend(override.aes = list(colour = NA, stroke = NA), ncol = 1),
shape = guide_legend(order = 2, title = NULL)  # Ensure shape is shown as a separate legend
) +
# Adjust legend text and key size
theme(
legend.text = element_text(face = "italic"),
legend.key.size = unit(10, "pt"),
panel.grid.minor = element_blank()
) +
ggspatial::annotation_north_arrow(
location = "bl", which_north = "true",
pad_x = unit(0.4, "in"), pad_y = unit(0.4, "in"),
height = unit(1, "cm"),
width = unit(1, "cm"),
style = ggspatial::north_arrow_fancy_orienteering(
fill = c("grey30", "white"),
line_col = "grey30",
text_col = "black"
)
) +
ggspatial::annotation_scale(
location = "bl",
# pad_x = unit(1, "cm"),
# pad_y = unit(0.5, "cm"),
bar_cols = 'white',
text_cex = 0.7
)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey',
col = 'grey10',
shape = 21,
size = 1.1,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void() +
ggspatial::annotation_scale(
location = "bl",
bar_cols = 'white',
text_cex = 0.5,
pad_x = unit(-0.001, "cm")
)
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.pdf', Sys.Date()),
height = 8,
width = 8)
p_zoom <- ggplot() +
geom_sf(data = ecoregions, aes(fill = NA_L2NAME), col = NA) +
scale_fill_manual(values = name_to_color, guide = "none") +
geom_sf(data = static_global,
fill = 'grey',
col = 'grey10',
shape = 21,
size = 1.1,
alpha = 0.8) +
coord_sf(xlim = c(-1919423 , -974527), ylim = c(-3988.947, 931888.7), expand = FALSE) +
theme_void()
# Convert zoom plot to a grob
zoom_grob <- ggplotGrob(p_zoom)
# Add the inset zoom plot to the main plot
p +
annotation_custom(
grob = zoom_grob,
xmin = -4100000.92 , xmax = -2000000.40  , ymin = -94747.87 , ymax = 1660122.89   # Position of inset box
)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.png', Sys.Date()),
height = 8,
width = 8)
ggsave(sprintf('../Figures/Foodscapes_distribution/Foodscapes_dist_%s.pdf', Sys.Date()),
height = 8,
width = 8)
# Set global options
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# This line is a note for humans
# The line below is a command for the computer to execute
print("congrats you ran this code chunk")
# Using <-
x <- 10    # assigns the value 10 to variable x
# Using =
y = 5      # assigns the value 5 to variable y
# You can then use these variables:
sum_xy <- x + y  # sum_xy now holds 15
print(sum_xy)
# Using <-
x <- 10    # assigns the value 10 to variable x
# Using =
y = 5      # assigns the value 5 to variable y
# You can then use these variables:
sum_xy <- x + y  # sum_xy now holds 15
print(sum_xy)
# Using <-
x <- 10    # assigns the value 10 to variable x
# Using =
y = 5      # assigns the value 5 to variable y
# You can then use these variables:
sum_xy <- x + y  # sum_xy now holds 15
print(sum_xy)
getwd()
setwd("C:/Users/toshio.matsuoka/Desktop/Foodscapes/GitHub/Introduction-to-R-programming")
setwd("your/path/here")
getwd()
setwd("C:/Users/toshio.matsuoka/Desktop/Foodscapes/GitHub/Introduction-to-R-programming")
# Replace NA with the path to your working directory
dir()
dir(./data)
dir('./data')
test_dir <- dir('./data')
test_dir <- dir('./data', full.names = T)
data_path_manual <- "data/temperature_data.csv"
data_path_helper <- file.path("data", "temperature_data.csv")
print(paste("Manually written:",data_path_manual))
print(paste("Using file.path:",data_path_helper))
print('They are the same!! YAY!')
